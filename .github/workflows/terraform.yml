name: Terraform Deployment

on:  
  push:
    branches: 
      - main

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      TEST_VAR: "justTesting"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7
               

      - name: Terraform Init
        working-directory: ./Task-5
        run: terraform init

      - name: Generate SSH Key
        run: ssh-keygen -t rsa -b 2048 -f ~/.ssh/Brian-terraform-key 

      - name: Terraform Plan
        working-directory: ./Task-5
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./Task-5
        run: terraform apply -auto-approve
      
      - name: Email Notification 
        if: ${{ always() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Terraform Deployment Status
          body: "Deployment status: ${{ job.status }}"
          to: brian.connolly71@gmail.com 
          from: terraform-notifier@example.com 
          content_type: text/plain
  
  request-destroy-approval: 
    name: Request Destroy Approval
    runs-on: ubuntu-latest
    if: ${{ always() && github.ref == 'refs/heads/main' }} 
    steps:
      - name: Send Approval Request Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Terraform Destroy Approval Required
          body: | 
            A Terraform Plan has been generated for destructive changes.

            Review the proposed plan carefully.

            * To Approve:  Click here [Insert Approval Link]
            * To Reject: Click here [Insert Rejection Link] 

          to: brian.connolly71@gmail.com 
          from: terraform-notifier@example.com 
          content_type: text/plain 

  terraform_destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    needs: request-destroy-approval
    if: ${{ needs.request-destroy-approval.outputs.approved == 'true' }}
    steps:
      - name: Terraform Destroy
        working-directory: ./Task-5
        run: terraform destroy -auto-approve 
